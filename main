import pyautogui
import time
from screeninfo import get_monitors
import threading
import os
import sys

# Function to log the program startup time to a text file
# Function to log the program startup time to a text file if not already logged for the current day
def log_startup_time():
    current_date = time.strftime("%Y-%m-%d")
    with open('startup_time.txt', 'r') as file:
        lines = file.readlines()
        if not lines or lines[-1].split()[0] != current_date:
            with open('startup_time.txt', 'a') as file:
                file.write(current_date + ' ' + time.strftime("%H:%M:%S") + '\n')


# Define the image paths and corresponding text to type
image_path_1 = r'C:\Users\Kuba\Documents\skrypty\image1.png'
image_path_2 = r'C:\Users\Kuba\Documents\skrypty\image2.png'

text_to_type_1 = 'Maxiecu512'
text_to_type_2 = 'maxiecu256'

# Set a custom confidence threshold (e.g., 0.9 for 90% confidence)
custom_confidence = 0.999

# Function to get the primary monitor's width and height
def get_primary_monitor_dimensions():
    primary_monitor = get_monitors()[0]
    return primary_monitor.width, primary_monitor.height

# Function to type text and press enter
def type_text_and_press_enter(text):
    pyautogui.typewrite(text)
    pyautogui.press('enter')

# Function to search for the second image in a separate thread
def search_for_image_2():
    consecutive_failures = 0  # Counter for consecutive screen grab failures
    while True:
        try:
            # Get primary monitor dimensions
            screen_width, screen_height = get_primary_monitor_dimensions()

            # Adjust region based on primary monitor dimensions for image 2
            region_2 = (screen_width // 2 - 250, screen_height // 2 - 150, 200, 200)

            # Take a screenshot and save it as preview2.png
            screenshot = pyautogui.screenshot(region=region_2)
            screenshot.save('preview2.png')

            # Compare the screenshot with the image
            location_2 = pyautogui.locateOnScreen(image_path_2, region=region_2, confidence=custom_confidence)

            if location_2 is not None:
                type_text_and_press_enter(text_to_type_2)
                print("Found Tester 2")
                consecutive_failures = 0  # Reset the counter on success
            else:
                print("Nothing Found for Tester 2")
                consecutive_failures += 1

            
        except pyautogui.ImageNotFoundException:
            print("Image not found for Tester 2. Retrying...")
        except OSError:  # Catch OSError specifically for screen grab failure
            print("Screen grab failed for Tester 2. Retrying in 3 seconds...")
            time.sleep(3)  # Sleep for 3 seconds before retrying
            consecutive_failures += 1
            if consecutive_failures >= 2:
                # If there is OSError ----> restart program
                consecutive_failures = 0  # Reset the counter
                print("Restarting program due to OS errors.")
                os.execv(sys.executable, ['python'] + sys.argv)  # Restart the Python program
                

        # Adjust the sleep time as needed to control the frequency of checks
        time.sleep(0.5)

# Create and start the thread for searching for image 2
thread_image_2 = threading.Thread(target=search_for_image_2)
thread_image_2.start()

log_startup_time()

while True:
    try:
        # Get primary monitor dimensions
        screen_width, screen_height = get_primary_monitor_dimensions()

        # Adjust region based on primary monitor dimensions for image 1
        region_1 = (screen_width // 2 - 250, screen_height // 2 - 150, 200, 200)

        # Take a screenshot and save it as preview.png
        screenshot = pyautogui.screenshot(region=region_1)
        screenshot.save('preview.png')

        # Compare the screenshot with the image
        location_1 = pyautogui.locateOnScreen(image_path_1, region=region_1, confidence=custom_confidence)

        if location_1 is not None:
            type_text_and_press_enter(text_to_type_1)
            print("Found Tester 1")
        else:
            print("Nothing Found for Tester 1")
    except pyautogui.ImageNotFoundException:
        print("Image not found for Tester 1. Retrying...")
    except OSError:  # Catch OSError specifically for screen grab failure
        print("Screen grab failed for Tester 1. Retrying in 3 seconds...")
        time.sleep(3)  # Sleep for 3 seconds before retrying

    # Adjust the sleep time as needed to control the frequency of checks
    time.sleep(0.5)
